name: 'Format suggestion with JuliaFormatter.jl'
description: "Formats your Julia files and suggest changes"
inputs:
  version:
    description: 'Version of JuliaFormatter.jl. Examples: 1, 1.0, 1.0.44'
    default: '1'
  suggestion-label:
    description: 'If set, suggestions will only be shown for PRs with this label applied.'
    default: ''
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
    - uses: julia-actions/setup-julia@v2
    - uses: julia-actions/cache@v2
    - name: Install JuliaFormatter
      shell: julia --color=yes {0}
      run: |
        using Pkg
        Pkg.add(Pkg.PackageSpec(name="JuliaFormatter", version=get(ENV, "jf-version", "1")))
      env:
        jf-version: ${{ inputs.version }}
    - name: Format
      shell: julia --color=yes {0}
      run: |
        using JuliaFormatter
        format(".")
    - name: Check for formatting errors
      shell: bash
      run: |
        output=$(git diff --name-only)
        if [ "$output" != "" ]; then
            >&2 echo "Some files have not been formatted !!!"
            echo "$output"
            exit 1
        fi
    - name: Suggest
      uses: reviewdog/action-suggester@v1
      if: ${{ failure() && (inputs.suggestion-label == '' || contains( github.event.pull_request.labels.*.name, inputs.suggestion-label )) }}
      with:
        tool_name: JuliaFormatter
        fail_level: error
